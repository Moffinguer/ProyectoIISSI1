USE ASSAABLOY;
DELIMITER //
CREATE OR REPLACE PROCEDURE PMODPROVEEDORES(ID INT, MAIL VARCHAR(40), FAX VARCHAR(10), TELF BIGINT, ALIAS VARCHAR(30))
	BEGIN
		IF ISNULL(ID) THEN
			SIGNAL SQLSTATE '50000' SET MESSAGE_TEXT = 'No se puede identificar al proveedor';
		ELSE
			IF NOT ISNULL(MAIL) AND NOT ISNULL(FAX) THEN
				UPDATE PROVEEDORES 
				SET 
					MAIL = MAIL,
					FAX  = FAX 
				WHERE 
					proveedores.IDPROVEEDOR = ID;
			ELSEIF NOT ISNULL(MAIL) AND ISNULL(FAX) THEN
				UPDATE PROVEEDORES 
				SET 
					MAIL = MAIL
				WHERE 
					proveedores.IDPROVEEDOR = ID;
			ELSEIF ISNULL(MAIL) AND NOT ISNULL(FAX) THEN
				UPDATE PROVEEDORES 
				SET 
					FAX  = FAX 
				WHERE 
					proveedores.IDPROVEEDOR = ID;
			ELSE
				IF ISNULL(TELF) THEN
					SIGNAL SQLSTATE '50001' SET MESSAGE_TEXT = 'No se puede identificar el teléfono';
				ELSEIF ISNULL(ALIAS) THEN
					SIGNAL SQLSTATE '50003' SET MESSAGE_TEXT = 'No se cambió el alias';
				ELSE
					UPDATE TELEFONOS
					SET
						telefonos.ALIAS   = ALIAS
					WHERE telefonos.IDPROVEEDOR = ID AND telefonos.NUMTELF = TELF;
				END IF;
			END IF;
		END IF;
	END //
DELIMITER ;
DELIMITER //
CREATE OR REPLACE PROCEDURE PMODMATERIALES(ID INT, PRECIO DOUBLE(6,2), STOCK INT)
	BEGIN
		IF ISNULL(ID) THEN
			SIGNAL SQLSTATE '50002' SET MESSAGE_TEXT = 'Material inválido';
		ELSE
			IF NOT ISNULL(STOCK) AND NOT ISNULL(PRECIO) THEN
				UPDATE materiales 
					SET materiales.PRECIOUNITARIO = PRECIO,
						 MATERIALES.STOCK = STOCK
					WHERE  
						ID = MATERIALES.IDMATERIAL;
			ELSEIF ISNULL(PRECIO) AND NOT ISNULL(STOCK) THEN
			UPDATE materiales 
					SET
						 MATERIALES.STOCK = STOCK
					WHERE  
						ID = MATERIALES.IDMATERIAL;
			ELSEIF ISNULL(STOCK) AND NOT ISNULL(PRECIO)THEN
				UPDATE materiales 
					SET materiales.PRECIOUNITARIO = PRECIO
					WHERE  
						ID = MATERIALES.IDMATERIAL;
			ELSE
				SIGNAL SQLSTATE '50003' SET MESSAGE_TEXT = 'No podemos modificar ningún campo';
			END IF;
		END IF;
	END //
DELIMITER ;
DELIMITER //
CREATE OR REPLACE PROCEDURE PMODPUERTA(ID INT, COLOR CHAR(6), NUMEROSERIE VARCHAR(10))
	BEGIN
		IF ISNULL(ID) AND ISNULL(NUMEROSERIE) THEN
			SIGNAL SQLSTATE '50004' SET MESSAGE_TEXT = 'Puerta inválida';
		ELSE
			IF NOT ISNULL(COLOR) THEN
					 UPDATE puertas
					 	SET puertas.COLOR = COLOR
					 WHERE PUERTAS.IDPUERTA = ID OR NUMEROSERIE = PUERTAS.NUMEROSERIE;
			ELSE
				SIGNAL SQLSTATE '50006' SET MESSAGE_TEXT = 'No va a modificar el color';
	   	END IF;
	   END IF;
	END //
DELIMITER ;

DELIMITER //
CREATE OR REPLACE FUNCTION fOBTIENEIDCLIENTE(C VARCHAR(9)) RETURNS INT
BEGIN
	RETURN (SELECT IDCLIENTE FROM clientes WHERE CIF=C);
END//
DELIMITER ;



DELIMITER //
CREATE OR REPLACE PROCEDURE 
INSERTARCLIENTE (C VARCHAR(9), I VARCHAR(29), N VARCHAR(50), D VARCHAR(100), M VARCHAR(40), F VARCHAR(10),
 P1 VARCHAR(10), P3 VARCHAR(10), P4 DATE, P5 CHAR(6), P6 DOUBLE(5,2), P7 BOOLEAN)
BEGIN
	DECLARE CID INT;
	INSERT INTO clientes (CIF,IBAN,NOMBREEMPRESA,DIRECCION,MAIL,FAX) 
		VALUES (C,I,N,D,M,F);
	CALL INSERTARPUERTA(P1, P3, P4, P5, P6, P7, C); 	
END//
DELIMITER ;

DELIMITER //
CREATE OR REPLACE PROCEDURE 
INSERTARPUERTA (P1 VARCHAR(10), P3 VARCHAR(10), P4 DATE, P5 CHAR(6), P6 DOUBLE(5,2), P7 BOOLEAN, C VARCHAR(9))
BEGIN
	DECLARE CID INT;
	SET CID = fOBTIENEIDCLIENTE(C);
	INSERT INTO puertas (NUMEROSERIE,IDCLIENTE,PUERTA,FECHAADQUISICION,COLOR,DIMENSIONA,ESMOTORIZADA) 
		VALUES (P1,CID,P3,P4,P5,P6,P7);
END//
DELIMITER ;

DELIMITER //
CREATE OR REPLACE PROCEDURE 
MODIFICARHISTORIAL (IDM INT, DESCR VARCHAR(100), FFIN DATE, PRECIOCAMBIO DOUBLE(6,2))
BEGIN
	IF (ISNULL(FFIN)) THEN
		UPDATE mantenimientos SET DESCRIPCION=CONCAT(CONCAT(DESCRIPCION,"|"),DESCR) WHERE mantenimientos.IDMANTENIMIENTO=IDM;
		UPDATE facturas SET PRECIOTOTAL=PRECIOCAMBIO+facturas.PRECIOTOTAL WHERE IDMANTENIMIENTO = IDM;
	ELSE
		UPDATE mantenimientos SET DESCRIPCION=CONCAT(CONCAT(DESCRIPCION,"|"),DESCR), FECHAFIN=FFIN WHERE mantenimientos.IDMANTENIMIENTO=IDM;
		UPDATE facturas SET PRECIOTOTAL=PRECIOCAMBIO+facturas.PRECIOTOTAL WHERE IDMANTENIMIENTO = IDM;
	END IF;
END//
DELIMITER ;
DELIMITER //
CREATE OR REPLACE PROCEDURE
	pInsertarEmpleado (nombre VARCHAR(100), apellidos VARCHAR(100), empleado VARCHAR(10), telefono BIGINT)
BEGIN
	INSERT INTO empleados(NOMBRE,APELLIDOS,EMPLEADO,TELEFONO) VALUES (nombre,apellidos,empleado,telefono);
END//
DELIMITER ;


DELIMITER //
CREATE OR REPLACE PROCEDURE
	pModificarEstadoGarantia(Fechafin DATE, ID INT)
BEGIN
	UPDATE garantias SET FECHAANUL = Fechafin
				WHERE garantias.IDGARANTIA = ID;
END//
DELIMITER ;
DELIMITER //
CREATE OR REPLACE FUNCTION ESPACIOOCUPADO(ID INT) RETURNS DOUBLE
BEGIN
	RETURN (SELECT SUM(materiales.TAMANIO * materiales.STOCK) FROM materiales 
												WHERE IDMATERIAL = ID);
END //
DELIMITER ;
DELIMITER //
CREATE OR REPLACE FUNCTION STOCKTOTAL(ID INT) RETURNS INT
BEGIN
	RETURN (SELECT SUM(materiales.TAMANIO*materiales.STOCK) FROM almacenes, materialesalmacenes, MATERIALES
							WHERE almacenes.IDALMACEN = ID AND almacenes.IDALMACEN = materialesalmacenes.IDALMACEN AND materiales.IDMATERIAL = materialesalmacenes.IDMATERIAL);
END //
DELIMITER ;
DELIMITER //
CREATE OR REPLACE PROCEDURE pModificarCliente (TELEF INT, IBAN CHAR(29), fax VARCHAR(10) , EMAIL VARCHAR(40), ID INT)
BEGIN 
	IF ISNULL(ID) AND ISNULL(IBAN) THEN
		SIGNAL SQLSTATE '50010' SET MESSAGE_TEXT = 'No se puede identificar al cliente';
	ELSE
		IF NOT ISNULL(FAX) THEN
			UPDATE CLIENTES
					SET FAX = fax
					WHERE IDCLIENTE = ID
								OR IBAN = IBAN;
		END IF;
		IF NOT ISNULL(EMAIL) THEN
			UPDATE CLIENTES
					SET EMAIL = email
					WHERE IDCLIENTE = ID
								OR IBAN = IBAN;
		END IF;
		IF NOT ISNULL(TELEF) AND NOT ISNULL(ID) THEN
			UPDATE TELEFONOS
					SET NUMTELF = TELEF
					WHERE CLIENTEID = ID;
		END IF;
	END IF;
END //
delimiter ;
DELIMITER //
CREATE OR REPLACE PROCEDURE pModificarEmpleado (ID INT, TELEF BIGINT)
BEGIN 
	IF ISNULL(ID) THEN
		SIGNAL SQLSTATE '50011' SET MESSAGE_TEXT = 'No se puede identificar al empleado';
	ELSEIF ISNULL(TELEF) THEN
		SIGNAL SQLSTATE '50012' SET MESSAGE_TEXT = 'No hay telefono con el que actualizar';
	ELSE
		UPDATE EMPLEADOS
			SET empleados.TELEFONO = TELEF
			WHERE ID = empleados.IDEMPLEADO;
	END IF;
END //
delimiter ; 
DELIMITER //
CREATE OR REPLACE PROCEDURE pModificarCliente (TELEF BIGINT, IBAN CHAR(29), fax VARCHAR(10) , EMAIL VARCHAR(40), ID INT)
BEGIN 
	IF ISNULL(ID) AND ISNULL(IBAN) THEN
		SIGNAL SQLSTATE '50010' SET MESSAGE_TEXT = 'No se puede identificar al cliente';
	ELSE
		IF ISNULL(TELEF) AND ISNULL(FAX) AND ISNULL(EMAIL) THEN
			SIGNAL SQLSTATE '50020' SET MESSAGE_TEXT = 'No hay ningún cambio a realizar';
		END IF;
		IF NOT ISNULL(FAX) THEN
			UPDATE CLIENTES
					SET FAX = fax
					WHERE IDCLIENTE = ID
								OR IBAN = IBAN;
		END IF;
		IF NOT ISNULL(EMAIL) THEN
			UPDATE CLIENTES
					SET EMAIL = email
					WHERE IDCLIENTE = ID
								OR IBAN = IBAN;
		END IF;
		IF NOT ISNULL(TELEF) THEN
			UPDATE TELEFONOS
					SET NUMTELF = TELEF
					WHERE IDCLIENTE = ID;
		END IF;
	END IF;
END //
delimiter ;